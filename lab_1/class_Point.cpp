#include "class_Point.h"
#include "class_Line.h"


namespace Point{

/***************************class Point*******************************************************************************/
/*------------------------------------------------------------------------------------------------------------------*/
Point::Point(){
  x = 0 ;
  y = 0 ;
}
/*------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------*/
Point::Point( Point & p){
  x = p.x ;
  y = p.y ;
}
/*------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------*/
Point::Point( double xv , double yv ){
  x = xv ;
  y = yv ;
}
/*------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------*/
//Point::~Point(){}
/*------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------*/
double Point::X() const {
  return x ;
}
/*------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------*/
double Point::Y() const {
  return y ;
}
/*------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------*/
void Point::_set( double & xv, double & yv ){
  x = xv ;
  y = yv ;
}
/*------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------*/
double Point::Rast(){
  return ( pow( ( pow( x, 2 ) + pow( y, 2 ) ) , 0.5 ) ) ;
}
/*------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------*/
double Point::Rast_t( const Point & t ){
  return( pow ( ( t.x - x ) , 2 ) + pow ( ( t.y - y ) , 2 ) ) ;
}
/*------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------*/
bool Point::Prov ( Line::Line & l ){
  return ( l.K() * Point::x + l.B() == Point::y ) ? 1 : 0 ;
}
/*------------------------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------------------------*/
Point Point::Wra_Point( double & da ){
  Point t ;
  t.x = x * cos( da ) ;
  t.y = y * sin( da ) ;
  return t ;
}
/*------------------------------------------------------------------------------------------------------------------*/

/****************************class Point******************************************************************************/

} //namespace Point
